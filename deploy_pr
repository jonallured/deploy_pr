#!/bin/sh

# ensure we're in a git repo
if ! [ -d .git ]; then
  echo 'Please run from a git repo.'
  exit 1
fi

# ensure hub is installed
if ! command -v hub > /dev/null; then
  echo 'Please brew install hub.'
  exit 2
fi

# ensure there's an upstream remote
git remote | grep upstream --quiet
if [ $? -ne 0 ] ; then
  echo 'Please set an upstream remote.'
  exit 3
fi

# ensure we're on master
current_branch=$(git rev-parse --abbrev-ref HEAD)
if [ "$current_branch" != "master" ]; then
  echo 'Please switch to master branch.'
  exit 4
fi

# ensure working copy is clean
if [[ -n $(git status -s) ]]; then
  echo 'Please commit any unsaved changes.'
  exit 5
fi

# get project name
project=artsy/$(basename "$PWD")

# fetch latest upstream to local
git fetch upstream --quiet

# show included PRs
prs=$(git log upstream/release...upstream/master --merges --oneline --grep 'from artsy/master' --invert-grep | grep 'Merge pull request' | cut -d ' ' -f 5 | cut -d '#' -f 2)

body="Included PRs:\n\n"
for pr in $prs; do
  body="$body* #$pr\n"
  echo https://github.com/$project/issues/$pr
done

if [[ $* == *--dry-run* ]]; then
  echo 'Dry run, no PR created.'
else
  # ask for title
  read -p 'title: ' title

  # create deploy PR
  message="Deploy: $title\n\n$body"
  pr_url=$(echo $message | hub pull-request -b $project:release -h $project:master -F -)


  if [[ $* == *--no-merge ]]; then
    echo $pr_url
  else
    # merge deploy PR
    git checkout upstream/release --quiet
    hub merge $pr_url --quiet > /dev/null 2>&1
    git push upstream HEAD:release --quiet
    git checkout master --quiet
    echo 'Deployment PR merged.'
  fi

  echo $pr_url
fi
